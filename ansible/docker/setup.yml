---
- name: Install Docker on all devices
  hosts: all
  gather_facts: yes
  # vars_files:
  #   - "{{ inventory_dir }}/group_vars/versions.yml"

  pre_tasks:
  - name: Set host-specific credentials for servers
    set_fact:
      ansible_user: "{{ credentials[inventory_hostname].user }}"
      ansible_password: "{{ credentials[inventory_hostname].password }}"
      ansible_become_password: "{{ credentials[inventory_hostname].become_pass }}"
    when: inventory_hostname not in groups['jetsons']

  - name: Test privilege escalation
    command: whoami
    become: yes
    register: whoami_out

  - debug:
      msg: "Running as: {{ whoami_out.stdout }}"

  tasks:
    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes
      become: yes # After apt's cache update,  ensure this is run with sudo otherwise it will fail "permission denied"


    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: yes # After apt's cache update,  ensure this is run with sudo otherwise it will fail "permission denied"

    - name: Add Docker APT repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
      become: yes # After apt's cache update,  ensure this is run with sudo otherwise it will fail "permission denied"

    - name: Update APT cache
      apt:
        update_cache: yes
      become: yes # After apt's cache update,  ensure this is run with sudo otherwise it will fail "permission denied"

    - name: Install Docker packages
      apt:
        name:
          - "docker-ce={{ versions.docker_ce }}"
          - "docker-ce-cli={{ versions.docker_ce_cli }}"
          - "containerd.io={{ versions.containerd_io }}"
        state: present
        allow_downgrade: yes
      become: yes

    - name: Enable and start Docker
      systemd:
        name: docker
        enabled: true
        state: started
      become: yes

    - name: Add current user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
      when: ansible_user != 'root'
      become: yes